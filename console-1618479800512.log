var x = 100;
undefined
typeof x;
"number"
var y = new Number(1000);
undefined
typeof y;
"object"
y instanceof Number;
true
typeof Number;
"function"
x;
100
y;
Number {1000}
++x;
101
++y;
1001
y;
1001
typeof y;
"number"
var y = new Number(1000);
undefined
typeof y;
"object"
y.toLocaleString('hi-IN')
"1,000"
y.toLocaleString('fr-FR')
"1 000"
var y = new Number(1000.8888);
undefined
y.toLocaleString('fr-FR')
"1 000,889"
y.toLocaleString('hi-IN')
"1,000.889"
x;
101
y;
Number {1000.8888}
x;
101
y;
Number {1000.8888}
typeof x;
"number"
typeof y;
"object"
x.toLocaleString('hi-IN');
"101"
var g = "Hello";
undefined
var g1 = new String("Hello");
undefined
typeof g;
"string"
typeof g1;
"object"
g;
"Hello"
g1;
String {"Hello"}
g1.toUpperCase();
"HELLO"
g.toUpperCase();
"HELLO"
g;
"Hello"
typeof g;
"string"
g;
"Hello"
g.toUpperCase();
"HELLO"
g;
"Hello"
var s = 1000;
undefined
s.toFixed();
"1000"
s;
1000
var price= 999;
undefined
var price2 = price;
undefined
price2;
999
price2++;
999
price2;
1000
price;
999
var arr = [10,20,30,40,50,60,90];
undefined
var arr2 = arr;
undefined
arr2[0] = 100000;
100000
arr2;
(7) [100000, 20, 30, 40, 50, 60, 90]
arr;
(7) [100000, 20, 30, 40, 50, 60, 90]
arr == arr2;
true
var arr3 = Object.assign([],arr);
undefined
arr3;
(7) [100000, 20, 30, 40, 50, 60, 90]
arr;
(7) [100000, 20, 30, 40, 50, 60, 90]
arr3== arr;
false
arr3[0] = 1;
1
arr3;
(7) [1, 20, 30, 40, 50, 60, 90]
arr;
(7) [100000, 20, 30, 40, 50, 60, 90]
Object;
ƒ Object() { [native code] }
window;
Window {window: Window, self: Window, document: document, name: "", location: Location, …}
this;
Window {window: Window, self: Window, document: document, name: "", location: Location, …}
window == this;
true
null == null
true
[] == []
false
[10,20] == [10,20]
false
function show(){
console.log("I am Show ");
}
undefined
show();
VM2161:2 I am Show 
undefined
show(10);
VM2161:2 I am Show 
undefined
show("Amit");
VM2161:2 I am Show 
undefined
function add(x,y){
    return x + y;
}
undefined
typeof add;
"function"
add(10,20);
30
var t = add(10,20);
undefined
t;
30
function add(){
console.log("I am Add ");
}
undefined
add();
VM2499:2 I am Add 
undefined
add(10,20);
VM2499:2 I am Add 
undefined
add(10,"20");
VM2499:2 I am Add 
undefined
console.dir(add);
VM2616:1 ƒ add()arguments: nullcaller: nulllength: 0name: "add"prototype: {constructor: ƒ}__proto__: ƒ ()[[FunctionLocation]]: VM2499:1[[Scopes]]: Scopes[1]
undefined
function add(){
console.log("I am Add ", arguments.length);
}
undefined
add();
VM2682:2 I am Add  0
undefined
add(10,20);
VM2682:2 I am Add  2
undefined
add(10,20,"30");
VM2682:2 I am Add  3
undefined
function add(){
//console.log("I am Add ", arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=arguments[i];
}
return sum;
}
undefined
add();
0
add(1,2,3,4,5,6);
21
add(1,"2",3,4,5,6);
"123456"
function add(){
//console.log("I am Add ", arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,"2",3,4,5,6);
21
function add(){
//console.log("I am Add ", arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,"two","3",4,5,6);
19
function three(){
return "100";
}
undefined
function three(){
return "3";
}
undefined
add(1,2,three,"four","5");
8
function add(){
//console.log("I am Add ", arguments.length);
var sum = 0;
for(var i = 0 ; i<arguments.length; i++){
if(typeof arguments[i]==="function"){
arguments[i] = arguments[i]();
}
sum+=isNaN(parseInt(arguments[i]))?0:parseInt(arguments[i]);
}
return sum;
}
undefined
add(1,2,three,"four","5");
11
parseInt(1000);
1000
parseInt("1000");
1000
parseInt(three);
NaN
